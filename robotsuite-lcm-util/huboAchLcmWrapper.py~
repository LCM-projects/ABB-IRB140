'''
Author: alexc89@mit.edu
SendMessageAchMatlab
Used to multicast Hubo's status on LCM.  It will take the information received on ACH and convert it to LCM.  This is needed for live visualization.

'''

import lcm
import time
import abb
import time
from ctypes import *
import threading 
#Import LCM Messages
from lcmtypes import abblcm




#Message Conversion
def convertLCM_Matlab(x):
    msg = abb_irb140pos()
    msg.timestamp =  time.time()
    
    msg.Joint1 = x[0]
    msg.Joint2 = x[1]
    msg.Joint3 = x[2]
    msg.Joint4 = x[3]
    msg.Joint5 = x[4]
    msg.Joint6 = x[5]

    return msg

def convertACH_Command(msg):
    return [msg.Joint1,msg.Joint2,msg.Joint3,msg.Joint4,msg.Joint5,msg.Joint6]

class abbIRB140LCMWrapper:
    
    def __init__(self):
        self.robot = abb.Robot(); #Robot Connection to openABB, input Robot's IP if needed.
        self.stateChan.flush()
        self.refChan.flush()
        self.subscription = self.lc.subscribe("IRB140Input",self.command_handler)
        
    def command_handler(self,channel,data):
        msg = abb_irb140pos.decode(data)
        jointCommand = convertACH_Command(msg)
        self.robot.setJoints(jointCommand)

    def broadcast_state(self):
        jointPos = self.robot.getJoints()
        #ACH to LCM conversion
        msg = convertLCM_Matlab(jointPos)
        self.lc.publish("IRB140Pos", msg.encode())

    def mainLoop(self,freq):
        pauseDelay = 1.0/freq #In Seconds.
        t = 1
        def broadcastLoop():
            while True:
                self.broadcast_state()
                time.sleep(pauseDelay)
        try:
            t = threading.Thread(target=broadcastLoop)
            t.daemon = True
            t.start()
            while True:
                time.sleep(pauseDelay)
                self.lc.handle()
        except KeyboardInterrupt:
            pass

if __name__ == "__main__":
    wrapper = abbIRB140LCMWrapper()
    print "IRB140LCMWrapper finish initialization, Begin transmission to LCM"
    wrapper.mainLoop(10) #Hertz
    print "IRB140LCMWrapper terminated successfully."
